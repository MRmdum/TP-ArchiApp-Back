Notre objectif est de connecter le site de dépot de message du premier TP avec ce micro-service de gestion de messages.

Pour cela, on va faire des appels AJAX (Asynchronous Javascript XML... sauf qu'on va manipuler du JSON en fait).

3.1 - Prise en main
Nous allons faire usage de la méthode fetch et des "promesses", comme discuté en cours. La forme du code qui va nous intéresser est comme suit:

?
1
2
3
4
5
6
7
fetch('https://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=22e21ef649526ef2b1be4db6d2b0857d&mode=json')
.then(function(response) {
  return response.json();
})
.then(function(data) {
  alert(data.weather[0].description)
});

La méthode fetch va générer en tache de fond un appel asynchrone à l'adresse indiquée. Puis, lorsque la réponse aura été reçue, la série des then va être exécutée:

D'abord on récupère le json associé à la réponse
puis on utilise le json en question
Note
On ne peut pas utiliser directement utiliser response.json(): il s'agit d'une... promesse, à ouvrir avec le .then qui vient après.

À faire
Copiez-collez ce code dans le fichier script.js du repl de Mockup.
Changez l'adresse pour celle de votre micro-service de message, sur la route msg/getAll
modifier l'appel à alert pour récupérer le premier message
"Lancez" la page du mockup: un pop-up avec le premier message du micro-service doit apparaitre.
3.2 - Remplissage des messages
Essentiellement, ce dont on a besoin au chargement de la page est d'ajouter les messages dans l'ordre. Vous avez réalisé cela dans le premier TP, en utilisant une variable locale.

À faire
Modifiez votre code pour peupler la liste des messages en utilisant le résultat à l'appel AJAX de votre micro-service de messages.

Il va potentiellement vous falloir mettre à jour le serveur pour prendre en compte des méta-données supplémentaires comme la date du message et le pseudo utilisé.

3.3 - Publication d'un nouveau message
Dans la page web "index.html", on veut pouvoir faire quelque chose lorsque le bouton d'envoi de message est sélectionné.

Lors de votre premier TP, vous avez du utiliser un <button> avec une capture d'évenements du click de souris.

À faire
Mettez à jour le corps de la fonction pour poster le message du <textarea> à l'aide du micro-service correspondant
le texte correspondant peut être récupéré en javascript avec $("textarea").val()
Dans un deuxième temps, mettez à jour la liste des messages sur la page.
Vous devriez maintenant avoir une page fonctionnelle, interagissant avec le micro-service de messagerie.